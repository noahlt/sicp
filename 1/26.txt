fast-prime? is logarithmic because we only need to do log(exp) multiplications to compute (expmod base exp m).  That works because we can reuse previous multiplications, that is, previous expmod calculations, and square them.  Every call of expmod contains no more than a single recursive call.  But Louis' code calls expmod recursively twice in the case where exp is even, it generates a tree, which is exponential in space.  So it will be O(k^(log(n))), which for the purposes of analysis is the same as O(n).